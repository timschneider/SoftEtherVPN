sudo: required

language: c

env:
  global:
    - OPENSSL_INSTALL_DIR="${HOME}/opt"

matrix:
  include:
    - env: OPENSSL_VERSION="1.0.2o" BUILD_DEB="1"
      os: linux
      compiler: gcc
    - env: OPENSSL_VERSION="1.1.0f"
      os: linux
      compiler: gcc
    - env: OPENSSL_VERSION="1.0.2o" RUN_COVERITY="1"
      os: linux
      compiler: clang
    - env: OPENSSL_VERSION="1.1.0f"
      os: linux
      compiler: clang
    - env: LABEL="check stb files"
      os: linux
      language: csharp
      mono: none
      dotnet: 2.1.300
      before_install:
        - true
      before_script:
        - true
      script:
        - cd developer_tools/stbchecker
        - dotnet run ../../src/bin/hamcore
    - env: LABEL="create release from tag"
      os: linux
      deploy:
        provider: releases
        api_key: ${GITHUB_OAUTH_TOKEN}
        file: se.tar.gz
        skip_cleanup: true
        on:
          tags: true
          repo: SoftEtherVPN/SoftEtherVPN
      before_install:
        - true
      before_script:
        - if [ -z "$TRAVIS_TAG" ]; then exit 0; fi
      script:
        - true
    - os: osx
      compiler: clang
      cache:
        directories:
        - ${HOME}/Library/Caches/Homebrew
      before_install:
        - brew update
      script:
        - ./configure
        - make -C tmp
        - otool -L build/vpnserver
        - .ci/memory-leak-test.sh

cache:
  directories:
  - download-cache
  - ${HOME}/opt

before_install:
  - bash .ci/build-openssl.sh > build-deps.log 2>&1 || (cat build-deps.log && exit 1)

before_script:
  - .ci/coverity.sh

script:
  - export OPENSSL_ROOT_DIR=${OPENSSL_INSTALL_DIR}
  - export LD_LIBRARY_PATH="${HOME}/opt/lib:${LD_LIBRARY_PATH:-}"
  - export CFLAGS="-I${HOME}/opt/include"
  - export LDFLAGS="-L${HOME}/opt/lib"
  - ./configure
  - make -C tmp
  - ldd build/vpnserver
  - if [ "${BUILD_DEB}" = "1" ]; then make package -C tmp; fi
  - .ci/memory-leak-test.sh
